/** xs-screen | 320px  */ @custom-media --xs-screen only screen and (width >= 20em);
/** sm-screen | 480px  */ @custom-media --sm-screen only screen and (width >= 30em);
/** md-screen | 600px  */ @custom-media --md-screen only screen and (width >= 37.5em);
/** lg-screen | 768px  */ @custom-media --lg-screen only screen and (width >= 48em);
/** xl-screen | 900px  */ @custom-media --xl-screen only screen and (width >= 56.25em);
/** 2x-screen | 1100px */ @custom-media --2x-screen only screen and (width >= 68.75em);
/** 3x-screen | 1300px */ @custom-media --3x-screen only screen and (width >= 81.25em);

.dock {
  position: fixed;
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  z-index: 1000;
  top:0;
  left: 0;
  right: 0;
  margin:0;
  padding: 0 0.5rem 0.5rem;

  animation-duration: 200ms;
  animation-fill-mode: forwards;
  animation-timing-function: linear;
  overflow: hidden;

  will-change: transform;
}

.dock button {
  padding: 0;
}

.dock,
.dockDisabled {
  transform: translateY(calc(-100% + 3rem));
}

.dockEnabled,
.dockTransition.dockDisabled {
  transform: translateY(0%);
}

.dockWrap {
  @media (--lg-screen) {
    max-height: 50vh;
  }
}

.dockTransition .dockWrap,
.dockDisabled .dockWrap {
  overflow: hidden !important;
}

.dockTransition.dockEnabled {
  animation-name: dock-slide-in;
}

.dockTransition.dockDisabled {
  animation-name: dock-slide-out;
}

@keyframes dock-slide-in {
  from {
    transform: translateY(calc(-100% + 3rem));
  }
  to {
    transform: translateY(0%);
  }
}

@keyframes dock-slide-out {
  from {
    transform: translateY(0%);
  }
  to {
    transform: translateY(calc(-100% + 3rem));
  }
}


.dockEntries {
  padding: 0.5rem;
}

.buttonContainer {
  display:flex;
  font-size:2rem;
  flex:0 0 3rem;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}


.buttonContainer > .flexSpacer {
  display:inline-flex;
  flex: 0 0 0.5em;
  font-size:1em;
  width: 100%;
}

.dockEnabled .buttonContainer > .flexSpacer {
  flex: 0 0 1em;
}

.buttonContainer > .flexItem {
  display: inline-flex;
  flex: 0 0 1em;
  font-size:1em;
}

.dockButton {
  display:flex;
  position: relative;
  font-size:2rem;
  width:1em;
  height:1em;
  border-width:0.5em;
  border-radius:50%;

  will-change: border-width margin-top;
}

.dockEnabled .dockButton {
  border-width: 0.7em;
  margin-top:-0.9em;
}


.overlay {
  position: absolute;
  font-size:1em;
  width:1em;
  height:1em;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  border:0;
}


.dockLogo {
  position: relative;
  display:flex;
  align-items: center;
  justify-content: center;
  font-size:2rem;
  transform: translate(-0.5em, -0.5em);
}

.logoIcon {
  font-size: 1em;
  line-height:1em;
  display:flex;
  align-items: center;
  justify-content: center;
  margin:0;
}

.logoText {
  font-size: 1em;
  line-height:1em;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: auto;
  transform: scale(0.5) translate(0.02em, -0.04em);
}





.field {
  font-size: 12px;
  & label {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    width: 100%;
  }

  & label.rightAlign {
    justify-content: flex-end;
  }

  @nest & label > span {
    margin: 0 0.3em;
  }
}


.inputWrap {
  font-size: 1em;
  position: relative;
  display: flex;
}

.inputWrap.type_checkbox {
  /* Checkbox tick */
  & .inputUI:after {
    top: 0;
    left: 30%;
    width: 3px;
    height: 8px;
    transform: rotate(45deg);
    border-style: solid;
    border-width: 0 2px 2px 0;
  }
}


.inputWrap.type_radio {
  & .inputUI {
    border-radius: 50%;
  }

  /* Radio button inner circle */
  & .inputUI:after {
    top: 1px;
    left: 1px;
    width: 6px;
    height: 6px;
    border-radius: 50%;
  }
}


.inputWrap.type_checkbox, .inputWrap.type_radio {
  font-size:1em;
  height: 1em;
  width: 1em;


  & .input {
    position: absolute;
    z-index: -1;
    opacity: 0;
    top: 0;
    left: 0;
  }
  & .inputUI {
    position: absolute;
    top: 0;
    left: 0;
    width: 0.9em;
    height: 0.9em;
    margin: 0.05em;
  }

    /* Check mark */
  & .inputUI:after {
    position: absolute;
    display: none;
    content: '';
  }

  /* Show check mark */
  & input:checked ~ .inputUI:after {
    display: block;
  }

      /* Disabled state */
  & input:disabled ~ .inputUI {
    pointer-events: none;
  }
}

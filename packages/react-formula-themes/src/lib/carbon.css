/** xs-screen | 320px  */ @custom-media --xs-screen only screen and (width >= 20em);
/** sm-screen | 480px  */ @custom-media --sm-screen only screen and (width >= 30em);
/** md-screen | 600px  */ @custom-media --md-screen only screen and (width >= 37.5em);
/** lg-screen | 768px  */ @custom-media --lg-screen only screen and (width >= 48em);
/** xl-screen | 900px  */ @custom-media --xl-screen only screen and (width >= 56.25em);
/** 2x-screen | 1100px */ @custom-media --2x-screen only screen and (width >= 68.75em);
/** 3x-screen | 1300px */ @custom-media --3x-screen only screen and (width >= 81.25em);

/**
 * BASE 16 COLOR SCHEMES
 *
 * base00 - Default Background
 * base01 - Lighter Background (Used for status bars)
 * base02 - Selection Background
 * base03 - Comments, Invisibles, Line Highlighting
 * base04 - Dark Foreground (Used for status bars)
 * base05 - Default Foreground, Caret, Delimiters, Operators
 * base06 - Light Foreground (Not often used)
 * base07 - Light Background (Not often used)
 * base08 - Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted
 * base09 - Integers, Boolean, Constants, XML Attributes, Markup Link Url
 * base0A - Classes, Markup Bold, Search Text Background
 * base0B - Strings, Inherited Class, Markup Code, Diff Inserted
 * base0C - Support, Regular Expressions, Escape Characters, Markup Quotes
 * base0D - Functions, Methods, Attribute IDs, Headings
 * base0E - Keywords, Storage, Selector, Markup Italic, Diff Changed
 * base0F - Deprecated, Opening/Closing Embedded Language Tags e.g. <?php ?>
 */

/** SOLARIZED */
:root {
  --base00: #002b36;
  --base01: #073642;
  --base02: #586e75;
  --base03: #657b83;
  --base04: #839496;
  --base05: #93a1a1;
  --base06: #eee8d5;
  --base07: #fdf6e3;
  --base08: #dc322f;
  --base09: #cb4b16;
  --base0A: #b58900;
  --base0B: #859900;
  --base0C: #2aa198;
  --base0D: #268bd2;
  --base0E: #6c71c4;
  --base0F: #d33682;
}

:root {
  --formula-dark: rgb(16, 34, 43);
  --formula-blue: rgb(10, 160, 217);
  --formula-red: rgb(217, 37, 37);
  --formula-orange: rgb(217, 118, 10);
  --formula-green: rgb(121, 208, 255);

  --control-bg: var(--base01);
  --control-fg: var(--base04);
  --control-border: color(var(--base01) blackness(+10%));

  --control-bg-hover: color(var(--control-bg) lightness(+10%));
  --control-bg-disabled: color(var(--control-bg) lightness(+50%));

  --control-fg-disabled: color(var(--control-fg) whiteness(+50%));

  --control-border-hover: color(var(--control-border) whiteness(+20%));
}


.logo {
  font-family: monospace;
}

.dockButton {
  margin-left: auto;
  margin-right: auto;
  border-color: var(--formula-dark);
  background-color: var(--formula-dark);
  color: var(--formula-blue);
  border-style: solid;
  text-decoration: none;
  cursor: pointer;
  box-shadow: 0 0 0.05rem 0.15rem var(--formula-dark);

  will-change: background-color, border-color, color, box-shadow;

  &:hover {
    color: var(--formula-green) !important;
  }

  &:focus {
    outline: none !important;
  }
}

.busy .dockButton {
  color: var(--formula-orange) !important;
}

.dockDisabled .dockButton {
  &:hover {
    box-shadow: 0 0 0.05rem 0.1rem var(--formula-green);
  }
}

.dockEnabled .dockButton {
  background-color: var(--formula-blue);
  border-color: var(--formula-blue);
  color: var(--formula-dark);
  box-shadow: none;
}

.dockEnabled .flexSpacer {
  background-color: var(--formula-blue);
  border-color: var(--formula-blue);
  color: var(--formula-dark);
  box-shadow: none;
}

.dockWrap {
  font-family: monospace;
  display: flex;
  flex-direction: column;
  background-color: rgba(45, 48, 51, 0.95);
  color: rgb(10, 160, 217);
  padding:4px;
  border-width: 0 1px 1px 1px;
  border-style: solid;
  border-color: rgb(10, 160, 217);
  border-radius: 0 0 1px 1px;
  max-height: 60vh;
  overflow: auto;

  will-change: overflow;


  &::-webkit-scrollbar-track {
    background-color: rgb(40, 40, 40);
    border: 1px solid rgb(10, 160, 217);
  }

  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
    border: 1px solid rgb(10, 160, 217);
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgb(10, 160, 217);
  }
}


.dock {
  background-color: transparent;
  border-width: 0;
}

.dockContent {
  width: 100%;
  flex: 1 1 auto;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-size: 1rem;
  font-weight: 100;
}

.dockColumn {
  background: transparent;
  width:100%;
}

.dockItem {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}




.dockTitle {
  font-size:1rem;
  letter-spacing:0.2rem;
  display:flex;
  align-self: center;
  font-weight:bold;
}

.dockFormName {
  font-weight: bold;
  font-size:0.9rem;
  letter-spacing:0.2rem;
  margin-top: 0.8rem;
}


.dockFormFields {
  margin-left: 1rem;
  font-size: 0.7rem;
}

.dockFormFields pre {
  display: inline-flex !important;
}


.inputWrap {
  font-size: 1em;
  position: relative;
  display: block;
  /*
  margin-bottom: 15px;
  padding-left: 30px;
   */

}


.inputWrap.type_radio {
  & .inputUI {
    border-radius: 50%;
  }

  /* Radio button inner circle */
  & .inputUI:after {
    top: 1px;
    left: 1px;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background: var(--control-fg);
  }

  /* Disabled circle colour */
  & input:disabled ~ .inputUI:after {
    background: var(--control-fg-disabled);
  }

}

.inputWrap.type_checkbox {
  & .inputUI {
    border-radius: 0.2em;
  }

  /* Checkbox tick */
  & .inputUI:after {
    top: 10%;
    left: 34%;
    width: 3px;
    height: 8px;
    transform: rotate(45deg);
    border: solid var(--control-fg);
    border-width: 0 2px 2px 0;
  }

  /* Disabled tick colour */
  & input:disabled ~ .inputUI:after {
    border-color: var(--control-fg-disabled);
  }
}


.field {


  & label {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
  }

  & label.rightAlign {
    justify-content: flex-end;
  }

  @nest & label > span {
    margin: 0 0.3em;
  }
}

.inputWrap.type_checkbox, .inputWrap.type_radio {
  font-size:1em;
  cursor: pointer;
  margin-bottom: 1em;
  padding-left: 1em;
  height: 1em;
  width: 1em;


  & .input {
    position: absolute;
    z-index: -1;
    opacity: 0;
    top: 0;
    left: 0;
  }

  & .inputUI {
    position: absolute;
    top: 0;
    left: 0;
    width: 1em;
    height: 1em;
    /*
    top: 2px;
    width: 20px;
    height: 20px;
    */
    background: var(--control-bg);
    border: 1px solid var(--control-border)
  }



  /* Check mark */
  & .inputUI:after {
    position: absolute;
    display: none;
    content: '';
  }

  /* Show check mark */
  & input:checked ~ .inputUI:after {
    display: block;
  }

    /* Disabled state */
  & input:disabled ~ .inputUI {
    pointer-events: none;
    opacity: .6;
    background: var(--control-bg-disabled);
  }


  &:hover input ~ .inputUI,
  & input:focus ~ .inputUI {
    background: var(--control-bg-hover);
    border-color: var(--control-border-hover);
  }

  /* Checked state */
  & input:checked ~ .inputUI {
    /*
    background: #2aa1c0;
    */
  }

  /* Hover state whilst checked */
  &:hover input:not([disabled]):checked ~ .inputUI,
  & input:checked:focus ~ .inputUI {
    /*
    background: #0e647d;
    */
  }

}
